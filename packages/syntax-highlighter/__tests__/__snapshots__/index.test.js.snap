// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Supported languages ASP.NET should syntax highlight an example 1`] = `
"<span class=\\"cm-s-neo\\"><span class=\\"cm-operator\\">&lt;%</span><span class=\\"cm-variable\\">@</span> <span class=\\"cm-variable\\">Language</span><span class=\\"cm-operator\\">=</span> <span class=\\"cm-string\\">&quot;VBScript&quot;</span> <span class=\\"cm-operator\\">%&gt;</span>
<span class=\\"cm-operator\\">&lt;%</span>
  <span class=\\"cm-variable\\">Response</span>.<span class=\\"cm-variable\\">Write</span>(<span class=\\"cm-string\\">&quot;Hello World&quot;</span>)
<span class=\\"cm-operator\\">%&gt;</span>
</span>"
`;

exports[`Supported languages C should syntax highlight an example 1`] = `
"<span class=\\"cm-s-neo\\"><span class=\\"cm-variable\\">#include</span> <span class=\\"cm-operator\\">&lt;</span><span class=\\"cm-variable\\">stdio</span>.<span class=\\"cm-variable\\">h</span><span class=\\"cm-operator\\">&gt;</span>

<span class=\\"cm-variable\\">int</span> <span class=\\"cm-variable\\">main</span>() {
  <span class=\\"cm-variable\\">printf</span>(<span class=\\"cm-string\\">&quot;Hello World\\\\n&quot;</span>);
  <span class=\\"cm-variable\\">return</span> <span class=\\"cm-number\\">0</span>;
}
</span>"
`;

exports[`Supported languages C# should syntax highlight an example 1`] = `
"<span class=\\"cm-s-neo\\"><span class=\\"cm-keyword\\">class</span> <span class=\\"cm-def\\">HelloWorld</span> {
  <span class=\\"cm-keyword\\">static</span> <span class=\\"cm-keyword\\">void</span> <span class=\\"cm-variable\\">Main</span>() {
    <span class=\\"cm-variable\\">System</span>.<span class=\\"cm-variable\\">Console</span>.<span class=\\"cm-variable\\">WriteLine</span>(<span class=\\"cm-string\\">&quot;Hello World&quot;</span>);
  }
}
</span>"
`;

exports[`Supported languages C++ should syntax highlight an example 1`] = `
"<span class=\\"cm-s-neo\\"><span class=\\"cm-meta\\">#include &lt;iostream&gt;</span>

<span class=\\"cm-keyword\\">using</span> <span class=\\"cm-keyword\\">namespace</span> <span class=\\"cm-def\\">std</span>;

<span class=\\"cm-type\\">int</span> <span class=\\"cm-def\\">main</span>()
{
  <span class=\\"cm-variable\\">cout</span> <span class=\\"cm-operator\\">&lt;&lt;</span> <span class=\\"cm-string\\">&quot;Hello World\\\\n&quot;</span>;
}
</span>"
`;

exports[`Supported languages CSS should syntax highlight an example 1`] = `
"<span class=\\"cm-s-neo\\"><span class=\\"cm-tag\\">body</span>::<span class=\\"cm-variable-3\\">before</span> {
  <span class=\\"cm-property\\">content</span>: <span class=\\"cm-string\\">&quot;Hello World&quot;</span>;
}
</span>"
`;

exports[`Supported languages Dart should syntax highlight an example 1`] = `
"<span class=\\"cm-s-neo\\"><span class=\\"cm-variable\\">main</span>() {
  <span class=\\"cm-variable\\">print</span>(<span class=\\"cm-string\\">&#x27;Hello World&#x27;</span>);
}
</span>"
`;

exports[`Supported languages Dockerfile should syntax highlight an example 1`] = `
"<span class=\\"cm-s-neo\\"><span class=\\"cm-keyword\\">FROM</span> alping:3.4
</span>"
`;

exports[`Supported languages Go should syntax highlight an example 1`] = `
"<span class=\\"cm-s-neo\\"><span class=\\"cm-keyword\\">package</span> <span class=\\"cm-variable\\">main</span>

<span class=\\"cm-keyword\\">import</span> <span class=\\"cm-string\\">&quot;fmt&quot;</span>

<span class=\\"cm-keyword\\">func</span> <span class=\\"cm-variable\\">main</span>() {
  <span class=\\"cm-variable\\">fmt</span><span class=\\"cm-number\\">.</span><span class=\\"cm-variable\\">Println</span>(<span class=\\"cm-string\\">&quot;Hello World&quot;</span>)
}
</span>"
`;

exports[`Supported languages HTML should syntax highlight an example 1`] = `
"<span class=\\"cm-s-neo\\"><span class=\\"cm-meta\\">&lt;!DOCTYPE html&gt;</span>
<span class=\\"cm-tag cm-bracket\\">&lt;</span><span class=\\"cm-tag\\">html</span> <span class=\\"cm-attribute\\">lang</span>=<span class=\\"cm-string\\">&quot;en&quot;</span><span class=\\"cm-tag cm-bracket\\">&gt;</span>
<span class=\\"cm-tag cm-bracket\\">&lt;</span><span class=\\"cm-tag\\">head</span><span class=\\"cm-tag cm-bracket\\">&gt;</span>
    <span class=\\"cm-tag cm-bracket\\">&lt;</span><span class=\\"cm-tag\\">meta</span> <span class=\\"cm-attribute\\">charset</span>=<span class=\\"cm-string\\">&quot;UTF-8&quot;</span><span class=\\"cm-tag cm-bracket\\">&gt;</span>
    <span class=\\"cm-tag cm-bracket\\">&lt;</span><span class=\\"cm-tag\\">meta</span> <span class=\\"cm-attribute\\">name</span>=<span class=\\"cm-string\\">&quot;viewport&quot;</span> <span class=\\"cm-attribute\\">content</span>=<span class=\\"cm-string\\">&quot;width=device-width, initial-scale=1.0&quot;</span><span class=\\"cm-tag cm-bracket\\">&gt;</span>
    <span class=\\"cm-tag cm-bracket\\">&lt;</span><span class=\\"cm-tag\\">title</span><span class=\\"cm-tag cm-bracket\\">&gt;</span>Hello World!<span class=\\"cm-tag cm-bracket\\">&lt;/</span><span class=\\"cm-tag\\">title</span><span class=\\"cm-tag cm-bracket\\">&gt;</span>
<span class=\\"cm-tag cm-bracket\\">&lt;/</span><span class=\\"cm-tag\\">head</span><span class=\\"cm-tag cm-bracket\\">&gt;</span>
<span class=\\"cm-tag cm-bracket\\">&lt;</span><span class=\\"cm-tag\\">body</span><span class=\\"cm-tag cm-bracket\\">&gt;</span>
    <span class=\\"cm-tag cm-bracket\\">&lt;</span><span class=\\"cm-tag\\">h1</span><span class=\\"cm-tag cm-bracket\\">&gt;</span>Hello World!<span class=\\"cm-tag cm-bracket\\">&lt;/</span><span class=\\"cm-tag\\">h1</span><span class=\\"cm-tag cm-bracket\\">&gt;</span>
<span class=\\"cm-tag cm-bracket\\">&lt;/</span><span class=\\"cm-tag\\">body</span><span class=\\"cm-tag cm-bracket\\">&gt;</span>
<span class=\\"cm-tag cm-bracket\\">&lt;/</span><span class=\\"cm-tag\\">html</span><span class=\\"cm-tag cm-bracket\\">&gt;</span>
</span>"
`;

exports[`Supported languages JSON should syntax highlight an example 1`] = `
"<span class=\\"cm-s-neo\\">{
  <span class=\\"cm-property\\">&quot;hello&quot;</span>: <span class=\\"cm-string\\">&quot;world&quot;</span>
}
</span>"
`;

exports[`Supported languages Java should syntax highlight an example 1`] = `
"<span class=\\"cm-s-neo\\"><span class=\\"cm-keyword\\">public</span> <span class=\\"cm-keyword\\">class</span> <span class=\\"cm-def\\">Java</span> {
  <span class=\\"cm-keyword\\">public</span> <span class=\\"cm-keyword\\">static</span> <span class=\\"cm-type\\">void</span> <span class=\\"cm-variable\\">main</span>(<span class=\\"cm-type\\">String</span>[] <span class=\\"cm-variable\\">args</span>) {
    <span class=\\"cm-variable\\">System</span>.<span class=\\"cm-variable\\">out</span>.<span class=\\"cm-variable\\">println</span>(<span class=\\"cm-string\\">&quot;Hello World&quot;</span>);
  }
}
</span>"
`;

exports[`Supported languages JavaScript should syntax highlight an example 1`] = `
"<span class=\\"cm-s-neo\\"><span class=\\"cm-variable\\">alert</span>(<span class=\\"cm-string\\">&#x27;Hello, world!&#x27;</span>);
</span>"
`;

exports[`Supported languages Kotlin should syntax highlight an example 1`] = `
"<span class=\\"cm-s-neo\\"><span class=\\"cm-keyword\\">package</span> <span class=\\"cm-variable\\">hello</span>

<span class=\\"cm-keyword\\">fun</span> <span class=\\"cm-def\\">main</span>() {
  <span class=\\"cm-variable\\">println</span>(<span class=\\"cm-string\\">&quot;Hello World&quot;</span>)
}
</span>"
`;

exports[`Supported languages Liquid should syntax highlight an example 1`] = `
"<span class=\\"cm-s-neo\\">{% if user %}
  Hello {{ user.name }}!
{% endif %}
</span>"
`;

exports[`Supported languages Markdown should syntax highlight an example 1`] = `
"<span class=\\"cm-s-neo\\"># Hello World
</span>"
`;

exports[`Supported languages Objective-C should syntax highlight an example 1`] = `
"<span class=\\"cm-s-neo\\"><span class=\\"cm-comment\\">/*</span>
 <span class=\\"cm-comment\\">Build on OS X:</span>
 <span class=\\"cm-comment\\">clang -framework Foundation -fobjc-arc objc.m -o objc</span>

 <span class=\\"cm-comment\\">Build on Linux with GNUstep:</span>
 <span class=\\"cm-comment\\">clang \\\\\`gnustep-config --objc-flags\\\\\` \\\\\`gnustep-config --base-libs\\\\\` -fobjc-nonfragile-abi -fobjc-arc objc.m -o objc</span>
 <span class=\\"cm-comment\\">*/</span>

<span class=\\"cm-meta\\">#import &lt;Foundation/Foundation.h&gt;</span>

<span class=\\"cm-type\\">int</span> <span class=\\"cm-def\\">main</span>(<span class=\\"cm-type\\">void</span>)
{
    <span class=\\"cm-variable\\">NSLog</span>(<span class=\\"cm-variable\\">@</span><span class=\\"cm-string\\">&quot;Hello World&quot;</span>);
}
</span>"
`;

exports[`Supported languages Objective-C++ should syntax highlight an example 1`] = `
"<span class=\\"cm-s-neo\\"><span class=\\"cm-comment\\">/*</span>
 <span class=\\"cm-comment\\">Build on OS X:</span>
 <span class=\\"cm-comment\\">clang -framework Foundation -fobjc-arc objc.m -o objc</span>

 <span class=\\"cm-comment\\">Build on Linux with GNUstep:</span>
 <span class=\\"cm-comment\\">clang \\\\\`gnustep-config --objc-flags\\\\\` \\\\\`gnustep-config --base-libs\\\\\` -fobjc-nonfragile-abi -fobjc-arc objc.m -o objc</span>
 <span class=\\"cm-comment\\">*/</span>

<span class=\\"cm-meta\\">#import &lt;Foundation/Foundation.h&gt;</span>

<span class=\\"cm-type\\">int</span> <span class=\\"cm-def\\">main</span>(<span class=\\"cm-type\\">void</span>)
{
    <span class=\\"cm-variable\\">NSLog</span>(<span class=\\"cm-variable\\">@</span><span class=\\"cm-string\\">&quot;Hello World&quot;</span>);
}
</span>"
`;

exports[`Supported languages PHP should syntax highlight an example 1`] = `
"<span class=\\"cm-s-neo\\"><span class=\\"cm-operator\\">&lt;?</span><span class=\\"cm-variable\\">php</span>

<span class=\\"cm-keyword\\">echo</span> <span class=\\"cm-string\\">&#x27;Hello World&#x27;</span>;
</span>"
`;

exports[`Supported languages PowerShell should syntax highlight an example 1`] = `
"<span class=\\"cm-s-neo\\"><span class=\\"cm-string\\">&#x27;Hello World&#x27;</span>
</span>"
`;

exports[`Supported languages Python should syntax highlight an example 1`] = `
"<span class=\\"cm-s-neo\\"><span class=\\"cm-comment\\">#!/usr/bin/env python</span>
<span class=\\"cm-builtin\\">print</span> <span class=\\"cm-string\\">&quot;Hello World&quot;</span>
</span>"
`;

exports[`Supported languages Ruby should syntax highlight an example 1`] = `
"<span class=\\"cm-s-neo\\"><span class=\\"cm-comment\\">#!/usr/bin/env ruby</span>
<span class=\\"cm-variable\\">puts</span> <span class=\\"cm-string\\">&quot;Hello World&quot;</span>
</span>"
`;

exports[`Supported languages SQL should syntax highlight an example 1`] = `
"<span class=\\"cm-s-neo\\"><span class=\\"cm-keyword\\">SELECT</span> <span class=\\"cm-string\\">&#x27;Hello World&#x27;</span><span class=\\"cm-punctuation\\">;</span>
</span>"
`;

exports[`Supported languages Scala should syntax highlight an example 1`] = `
"<span class=\\"cm-s-neo\\"><span class=\\"cm-keyword\\">object</span> <span class=\\"cm-def\\">HelloWorld</span> <span class=\\"cm-keyword\\">extends</span> <span class=\\"cm-type\\">App</span> {
  <span class=\\"cm-keyword\\">println</span>(<span class=\\"cm-string\\">&quot;Hello World&quot;</span>)
}
</span>"
`;

exports[`Supported languages Shell should syntax highlight an example 1`] = `
"<span class=\\"cm-s-neo\\"><span class=\\"cm-meta\\">#!/bin/sh</span>
<span class=\\"cm-builtin\\">echo</span> <span class=\\"cm-string\\">&quot;Hello World&quot;</span>
</span>"
`;

exports[`Supported languages Swift should syntax highlight an example 1`] = `
"<span class=\\"cm-s-neo\\"><span class=\\"cm-variable\\">print</span><span class=\\"cm-punctuation\\">(</span><span class=\\"cm-string\\">&quot;Hello World&quot;</span><span class=\\"cm-punctuation\\">)</span>
</span>"
`;

exports[`Supported languages XML should syntax highlight an example 1`] = `
"<span class=\\"cm-s-neo\\"><span class=\\"cm-meta\\">&lt;?xml</span> <span class=\\"cm-meta\\">version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class=\\"cm-tag cm-bracket\\">&lt;</span><span class=\\"cm-tag\\">text</span><span class=\\"cm-tag cm-bracket\\">&gt;</span><span class=\\"cm-atom\\">&lt;![CDATA[Hello World]]&gt;</span><span class=\\"cm-tag cm-bracket\\">&lt;/</span><span class=\\"cm-tag\\">text</span><span class=\\"cm-tag cm-bracket\\">&gt;</span>
</span>"
`;

exports[`Supported languages cURL should syntax highlight an example 1`] = `
"<span class=\\"cm-s-neo\\"><span class=\\"cm-builtin\\">curl</span> <span class=\\"cm-attribute\\">--request</span> GET \\\\
  <span class=\\"cm-attribute\\">--url</span> <span class=\\"cm-string\\">&#x27;https://dash.readme.io/api/v1/api-specification?perPage=10&amp;page=1&#x27;</span> \\\\
  <span class=\\"cm-attribute\\">--header</span> <span class=\\"cm-string\\">&#x27;x-readme-version: v3.0&#x27;</span>
</span>"
`;
