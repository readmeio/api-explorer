{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "http://httpbin.org"
    }
  ],
  "info": {
    "version": "1.0.0",
    "title": "An example of how we render $ref usage on resource parameters"
  },
  "paths": {
    "/anything": {
      "get": {
        "summary": "Query param with a child $ref",
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "array (with a $ref)",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/string_enum"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "summary": "Query param pointing to a $ref",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/limitParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "summary": "Query param pointing to a $ref that has an escaped ~1 slash",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit~1Param"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "limitParam": {
        "in": "query",
        "name": "limit",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 50,
          "default": 20
        },
        "description": "The numbers of items to return."
      },
      "limit/Param": {
        "in": "query",
        "name": "limit",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 50,
          "default": 20
        },
        "description": "The numbers of items to return."
      }
    },
    "schemas": {
      "string_enum": {
        "enum": [
          "available",
          "pending",
          "sold"
        ],
        "type": "string"
      }
    }
  }
}
