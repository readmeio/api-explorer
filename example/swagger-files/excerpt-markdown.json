{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "https://httpbin.org"
    }
  ],
  "info": {
    "title": "response schemas",
    "version": "1.0"
  },
  "paths": {
    "/anything/markdown": {
      "get": {
        "summary": "Markdown in Excerpt",
        "description": "# Markdown",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/anything/html": {
      "get": {
        "summary": "HTML in Excerpt",
        "description": "<h3>This is HTML</h3>",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/anything/mixed": {
      "get": {
        "summary": "HTML/Markdown in Excerpt",
        "description": "#### markdown \n<p>html</p> ",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/anything/escaping": {
      "get": {
        "summary": "Escaping bad HTML",
        "description": "<img src=\"x\" onerror=\"alert('charlie')\">",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
     "/rightside/codeblocks": {
      "get": {
        "summary": "Displaying copy button",
        "description": "`const options = { copyButtons: false };`\n```javascript\nconst options = { copyButtons: true }\n```",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/extendedAttribute"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "extendedAttribute": {
        "type": "object",
        "required": [
          "value"
        ],
        "properties": {
          "createdOn": {
            "type": "string",
            "format": "date",
            "description": "yyyy-MM-dd'T'HH:mm:ss.SSSZ. Generated and managed by the service. `Read-only`"
          },
          "lastModifiedOn": {
            "type": "string",
            "format": "date",
            "description": "yyyy-MM-dd'T'HH:mm:ss.SSSZ. Generated and managed by the service. `Read-only`"
          },
          "application": {
            "allOf": [
              {
                "$ref": "#/components/schemas/link"
              }
            ]
          },
          "value": {
            "type": "string"
          }
        }
      },
      "linkBase": {
        "type": "object",
        "required": [
          "href",
          "rel"
        ],
        "properties": {
          "href": {
            "type": "string",
            "description": "The URI of the resource this `Link` represents."
          },
          "rel": {
            "type": "string",
            "description": "Relation to the resource represented by the `Link`,"
          },
          "status": {
            "type": "string",
            "description": "Status of the resource represented by this Link.",
            "readOnly": true,
            "enum": [
              "Enabled",
              "Disabled",
              "Suspended",
              "Deleted"
            ]
          },
          "title": {
            "type": "string",
            "description": "Some descriptive text about the Link. Generally name of the resource represented by this Link.",
            "readOnly": true
          }
        }
      },
      "link": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/linkBase"
          },
          {
            "type": "object",
            "properties": {
              "source": {
                "$ref": "#/components/schemas/linkBase"
              }
            }
          }
        ]
      }
    }
  }
}
